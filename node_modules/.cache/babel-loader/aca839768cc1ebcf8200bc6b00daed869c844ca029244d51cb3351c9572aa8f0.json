{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Foye\\\\Documents\\\\Meet-Me-Halfway\\\\src\\\\MapWithDirections.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer } from \"@react-google-maps/api\";\nimport { Link } from \"react-router-dom\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapWithDirections = () => {\n  _s();\n  const containerStyle = {\n    width: \"100%\",\n    height: \"500px\"\n  };\n  const defaultCenter = {\n    lat: 40.7128,\n    lng: -74.0060\n  }; // Default location (e.g., New York)\n  const [center, setCenter] = useState(defaultCenter);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n\n  // Create panel dynamically\n  useEffect(() => {\n    const container = document.createElement(\"div\");\n    container.id = \"container\";\n    container.style.display = \"flex\";\n    container.style.height = \"100vh\";\n    const panelDiv = document.createElement(\"div\");\n    panelDiv.id = \"panel\";\n    panelDiv.style.flex = \"30%\";\n    panelDiv.style.overflow = \"auto\";\n    panelDiv.style.padding = \"10px\";\n    panelDiv.style.background = \"#f7f7f7\";\n    container.appendChild(panelDiv);\n    document.body.appendChild(container);\n    return () => {\n      // Cleanup to remove the dynamically added panel on unmount\n      document.body.removeChild(container);\n    };\n  }, []);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCenter({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    } else {\n      console.error(\"Geolocation not supported by this browser.\");\n    }\n  }, []);\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\" // Replace with your API key\n  });\n  const fetchDirections = () => {\n    if (window.google && window.google.maps) {\n      const directionsService = new window.google.maps.DirectionsService();\n      const directionsRenderer = new window.google.maps.DirectionsRenderer();\n      directionsRenderer.setMap(null); // Ensure no duplicate renderers\n      directionsRenderer.setPanel(document.getElementById(\"panel\")); // Attach the panel\n\n      directionsService.route({\n        origin: center,\n        // User's current location\n        destination: {\n          lat: 32.7851,\n          lng: -96.9683\n        },\n        // Midway point or custom location\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirectionsResponse(result); // Update state with the directions\n          directionsRenderer.setDirections(result); // Render the directions in the panel\n        } else {\n          console.error(\"Error fetching directions:\", status);\n        }\n      });\n    } else {\n      console.error(\"Google Maps not loaded.\");\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDirections,\n      style: {\n        margin: \"10px\"\n      },\n      children: \"Get Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 20,\n      children: directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directionsResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/NearbySearch\",\n        children: \"NearbySearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MapWithDirections, \"i3LKCpm/Blk5l/ZBJdj+sdtG8Fw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapWithDirections;\nexport default MapWithDirections;\nvar _c;\n$RefreshReg$(_c, \"MapWithDirections\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","DirectionsRenderer","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","MapWithDirections","_s","containerStyle","width","height","defaultCenter","lat","lng","center","setCenter","directionsResponse","setDirectionsResponse","container","document","createElement","id","style","display","panelDiv","flex","overflow","padding","background","appendChild","body","removeChild","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","isLoaded","loadError","googleMapsApiKey","fetchDirections","window","google","maps","directionsService","DirectionsService","directionsRenderer","setMap","setPanel","getElementById","route","origin","destination","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setDirections","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","mapContainerStyle","zoom","directions","to","_c","$RefreshReg$"],"sources":["C:/Users/Foye/Documents/Meet-Me-Halfway/src/MapWithDirections.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer } from \"@react-google-maps/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst MapWithDirections = () => {\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n  };\r\n\r\n  const defaultCenter = { lat: 40.7128, lng: -74.0060 }; // Default location (e.g., New York)\r\n  const [center, setCenter] = useState(defaultCenter);\r\n  const [directionsResponse, setDirectionsResponse] = useState(null);\r\n\r\n  // Create panel dynamically\r\n  useEffect(() => {\r\n    const container = document.createElement(\"div\");\r\n    container.id = \"container\";\r\n    container.style.display = \"flex\";\r\n    container.style.height = \"100vh\";\r\n\r\n    const panelDiv = document.createElement(\"div\");\r\n    panelDiv.id = \"panel\";\r\n    panelDiv.style.flex = \"30%\";\r\n    panelDiv.style.overflow = \"auto\";\r\n    panelDiv.style.padding = \"10px\";\r\n    panelDiv.style.background = \"#f7f7f7\";\r\n\r\n    container.appendChild(panelDiv);\r\n    document.body.appendChild(container);\r\n\r\n    return () => {\r\n      // Cleanup to remove the dynamically added panel on unmount\r\n      document.body.removeChild(container);\r\n    };\r\n  }, []);\r\n\r\n  // Get user's location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCenter({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting location:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation not supported by this browser.\");\r\n    }\r\n  }, []);\r\n\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\", // Replace with your API key\r\n  });\r\n\r\n  const fetchDirections = () => {\r\n    if (window.google && window.google.maps) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      const directionsRenderer = new window.google.maps.DirectionsRenderer();\r\n\r\n      directionsRenderer.setMap(null); // Ensure no duplicate renderers\r\n      directionsRenderer.setPanel(document.getElementById(\"panel\")); // Attach the panel\r\n\r\n      directionsService.route(\r\n        {\r\n          origin: center, // User's current location\r\n          destination: { lat: 32.7851, lng: -96.9683 }, // Midway point or custom location\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirectionsResponse(result); // Update state with the directions\r\n            directionsRenderer.setDirections(result); // Render the directions in the panel\r\n          } else {\r\n            console.error(\"Error fetching directions:\", status);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Google Maps not loaded.\");\r\n    }\r\n  };\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <button onClick={fetchDirections} style={{ margin: \"10px\" }}>\r\n        Get Directions\r\n      </button>\r\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={20}>\r\n        {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}\r\n      </GoogleMap>\r\n      <nav>\r\n        <Link to=\"/NearbySearch\">NearbySearch</Link>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapWithDirections;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}