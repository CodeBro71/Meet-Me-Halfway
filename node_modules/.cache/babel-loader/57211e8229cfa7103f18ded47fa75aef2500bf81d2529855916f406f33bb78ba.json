{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Foye\\\\Documents\\\\Meet-Me-Halfway\\\\src\\\\MergedMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer, Marker } from \"@react-google-maps/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst defaultCenter = {\n  lat: 40.7128,\n  lng: -74.0060\n}; // Default to NYC\n\nconst geocodeAddress = async address => {\n  const apiKey = \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\";\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${apiKey}`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.status === \"OK\") {\n      return data.results[0].geometry.location;\n    } else {\n      console.error(\"Geocoding failed:\", data.status);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching geocode:\", error);\n    return null;\n  }\n};\nconst calculateMidpoint = (coord1, coord2) => ({\n  lat: (coord1.lat + coord2.lat) / 2,\n  lng: (coord1.lng + coord2.lng) / 2\n});\nconst MergedMap = () => {\n  _s();\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [originCoords, setOriginCoords] = useState(null);\n  const [destinationCoords, setDestinationCoords] = useState(null);\n  const [midpoint, setMidpoint] = useState(null);\n  const [center, setCenter] = useState(defaultCenter);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\",\n    libraries: [\"places\"]\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCenter({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    }\n  }, []);\n  const fetchDirections = useCallback(async () => {\n    if (!window.google || !window.google.maps) {\n      console.error(\"Google Maps not loaded.\");\n      return;\n    }\n    if (!origin || !destination) {\n      alert(\"Please enter both addresses.\");\n      return;\n    }\n    const coords1 = await geocodeAddress(origin);\n    const coords2 = await geocodeAddress(destination);\n    if (!coords1 || !coords2) {\n      alert(\"Invalid addresses. Try again.\");\n      return;\n    }\n    setOriginCoords(coords1);\n    setDestinationCoords(coords2);\n    const midpointCalculated = calculateMidpoint(coords1, coords2);\n    setMidpoint(midpointCalculated);\n    setCenter(midpointCalculated);\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: coords1,\n      destination: coords2,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirectionsResponse(result);\n      } else {\n        console.error(\"Error fetching directions:\", status);\n      }\n    });\n  }, [origin, destination]);\n  useEffect(() => {\n    if (origin && destination) {\n      fetchDirections();\n    }\n  }, [origin, destination, fetchDirections]);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter origin address\",\n        value: origin,\n        onChange: e => setOrigin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter destination address\",\n        value: destination,\n        onChange: e => setDestination(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      children: [directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directionsResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 32\n      }, this), originCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: originCoords,\n        label: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }, this), destinationCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: destinationCoords,\n        label: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 31\n      }, this), midpoint && /*#__PURE__*/_jsxDEV(Marker, {\n        position: midpoint,\n        label: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MergedMap, \"shUcL0I24YITHZWq4LMycP6U1eA=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MergedMap;\nexport default MergedMap;\nvar _c;\n$RefreshReg$(_c, \"MergedMap\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","useJsApiLoader","DirectionsRenderer","Marker","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","defaultCenter","lat","lng","geocodeAddress","address","apiKey","url","encodeURIComponent","response","fetch","data","json","status","results","geometry","location","console","error","calculateMidpoint","coord1","coord2","MergedMap","_s","origin","setOrigin","destination","setDestination","originCoords","setOriginCoords","destinationCoords","setDestinationCoords","midpoint","setMidpoint","center","setCenter","directionsResponse","setDirectionsResponse","isLoaded","loadError","googleMapsApiKey","libraries","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchDirections","window","google","maps","alert","coords1","coords2","midpointCalculated","directionsService","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","type","placeholder","value","onChange","e","target","mapContainerStyle","zoom","directions","label","_c","$RefreshReg$"],"sources":["C:/Users/Foye/Documents/Meet-Me-Halfway/src/MergedMap.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer, Marker } from \"@react-google-maps/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"500px\",\r\n};\r\n\r\nconst defaultCenter = { lat: 40.7128, lng: -74.0060 }; // Default to NYC\r\n\r\nconst geocodeAddress = async (address) => {\r\n  const apiKey = \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\";\r\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${apiKey}`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data.status === \"OK\") {\r\n      return data.results[0].geometry.location;\r\n    } else {\r\n      console.error(\"Geocoding failed:\", data.status);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching geocode:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst calculateMidpoint = (coord1, coord2) => ({\r\n  lat: (coord1.lat + coord2.lat) / 2,\r\n  lng: (coord1.lng + coord2.lng) / 2,\r\n});\r\n\r\nconst MergedMap = () => {\r\n  const [origin, setOrigin] = useState(\"\");\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [originCoords, setOriginCoords] = useState(null);\r\n  const [destinationCoords, setDestinationCoords] = useState(null);\r\n  const [midpoint, setMidpoint] = useState(null);\r\n  const [center, setCenter] = useState(defaultCenter);\r\n  const [directionsResponse, setDirectionsResponse] = useState(null);\r\n\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: \"AIzaSyA2oxgEXddn3TiBypWPBckx0m6iwn5UDyA\",\r\n    libraries: [\"places\"],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCenter({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting location:\", error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const fetchDirections = useCallback(async () => {\r\n    if (!window.google || !window.google.maps) {\r\n      console.error(\"Google Maps not loaded.\");\r\n      return;\r\n    }\r\n\r\n    if (!origin || !destination) {\r\n      alert(\"Please enter both addresses.\");\r\n      return;\r\n    }\r\n\r\n    const coords1 = await geocodeAddress(origin);\r\n    const coords2 = await geocodeAddress(destination);\r\n\r\n    if (!coords1 || !coords2) {\r\n      alert(\"Invalid addresses. Try again.\");\r\n      return;\r\n    }\r\n\r\n    setOriginCoords(coords1);\r\n    setDestinationCoords(coords2);\r\n    const midpointCalculated = calculateMidpoint(coords1, coords2);\r\n    setMidpoint(midpointCalculated);\r\n    setCenter(midpointCalculated);\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: coords1,\r\n        destination: coords2,\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n      },\r\n      (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n          setDirectionsResponse(result);\r\n        } else {\r\n          console.error(\"Error fetching directions:\", status);\r\n        }\r\n      }\r\n    );\r\n  }, [origin, destination]);\r\n\r\n  useEffect(() => {\r\n    if (origin && destination) {\r\n      fetchDirections();\r\n    }\r\n  }, [origin, destination, fetchDirections]);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <input type=\"text\" placeholder=\"Enter origin address\" value={origin} onChange={(e) => setOrigin(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Enter destination address\" value={destination} onChange={(e) => setDestination(e.target.value)} />\r\n      </div>\r\n\r\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={10}>\r\n        {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}\r\n        {originCoords && <Marker position={originCoords} label=\"A\" />}\r\n        {destinationCoords && <Marker position={destinationCoords} label=\"B\" />}\r\n        {midpoint && <Marker position={midpoint} label=\"C\" />}\r\n      </GoogleMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MergedMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}